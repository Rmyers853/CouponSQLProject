<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WatsonORM.Sqlite</name>
    </assembly>
    <members>
        <member name="T:Watson.ORM.Sqlite.WatsonORM">
            <summary>
            WatsonORM for Sqlite, a lightweight and easy to use object-relational mapper (ORM).
            </summary>
        </member>
        <member name="P:Watson.ORM.Sqlite.WatsonORM.Settings">
            <summary>
            Database settings.
            </summary>
        </member>
        <member name="P:Watson.ORM.Sqlite.WatsonORM.Database">
            <summary>
            Direct access to the underlying database client.
            </summary>
        </member>
        <member name="P:Watson.ORM.Sqlite.WatsonORM.IsInitialized">
            <summary>
            Indicates if the database has been initialized.
            </summary>
        </member>
        <member name="M:Watson.ORM.Sqlite.WatsonORM.#ctor(DatabaseWrapper.Core.DatabaseSettings)">
            <summary>
            Instantiate the object.  Once constructed, call InitializeDatabase() and InitializeTable() for each table if needed.
            </summary>
            <param name="settings">Database settings.</param>
        </member>
        <member name="M:Watson.ORM.Sqlite.WatsonORM.Dispose">
            <summary>
            Dispose of the object and release background workers.
            </summary>
        </member>
        <member name="M:Watson.ORM.Sqlite.WatsonORM.InitializeDatabase">
            <summary>
            Initialize the database client.
            If the client is already initialized, it will first be disposed.
            </summary>
        </member>
        <member name="M:Watson.ORM.Sqlite.WatsonORM.ValidateTables(System.Collections.Generic.List{System.Type},System.Collections.Generic.List{System.String}@,System.Collections.Generic.List{System.String}@)">
            <summary>
            Validate a series of tables to determine if any errors or warnings exist.
            </summary>
            <param name="types">List of classes for which tables should be validated.</param>
            <param name="errors">List of human-readable errors.</param>
            <param name="warnings">List of human-readable warnings.</param>
            <returns>True if the table will initialize successfully.</returns>
        </member>
        <member name="M:Watson.ORM.Sqlite.WatsonORM.ValidateTable(System.Type,System.Collections.Generic.List{System.String}@,System.Collections.Generic.List{System.String}@)">
            <summary>
            Validate a table to determine if any errors or warnings exist.
            </summary>
            <param name="t">Class for which a table should be validated.</param>
            <param name="errors">List of human-readable errors.</param>
            <param name="warnings">List of human-readable warnings.</param>
            <returns>True if the table will initialize successfully.</returns>
        </member>
        <member name="M:Watson.ORM.Sqlite.WatsonORM.InitializeTables(System.Collections.Generic.List{System.Type})">
            <summary>
            Create tables (if they don't exist) for a given set of classes.
            </summary>
            <param name="types">List of classes for which a table should be created.</param>
        </member>
        <member name="M:Watson.ORM.Sqlite.WatsonORM.InitializeTable(System.Type)">
            <summary>
            Create table (if it doesn't exist) for a given class.
            Adding a table that has already been added will throw an ArgumentException.
            </summary>
            <param name="t">Class for which a table should be created.</param>
        </member>
        <member name="M:Watson.ORM.Sqlite.WatsonORM.DropTable(System.Type)">
            <summary>
            Drop table if it exists for a given class.
            </summary>
            <param name="t">Class for which a table should be dropped.</param>
        </member>
        <member name="M:Watson.ORM.Sqlite.WatsonORM.DropTableAsync(System.Type,System.Threading.CancellationToken)">
            <summary>
            Drop table if it exists for a given class.
            </summary>
            <param name="t">Class for which a table should be dropped.</param>
            <param name="token">Cancellation token.</param>
        </member>
        <member name="M:Watson.ORM.Sqlite.WatsonORM.TruncateTable(System.Type)">
            <summary>
            Truncate table if it exists for a given class.
            </summary>
            <param name="t">Class for which a table should be dropped.</param>
        </member>
        <member name="M:Watson.ORM.Sqlite.WatsonORM.TruncateTableAsync(System.Type,System.Threading.CancellationToken)">
            <summary>
            Truncate table if it exists for a given class.
            </summary>
            <param name="t">Class for which a table should be dropped.</param>
            <param name="token">Cancellation token.</param>
        </member>
        <member name="M:Watson.ORM.Sqlite.WatsonORM.Insert``1(``0)">
            <summary>
            INSERT an object.
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="obj">Object to INSERT.</param>
            <returns>INSERTed object.</returns>
        </member>
        <member name="M:Watson.ORM.Sqlite.WatsonORM.InsertAsync``1(``0,System.Threading.CancellationToken)">
            <summary>
            INSERT an object.
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="obj">Object to INSERT.</param>
            <param name="token">Cancellation token.</param>
            <returns>INSERTed object.</returns>
        </member>
        <member name="M:Watson.ORM.Sqlite.WatsonORM.InsertMany``1(System.Collections.Generic.List{``0})">
            <summary>
            INSERT multiple records.
            This operation will iteratively call Insert on each individual object.
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="objs">List of objects.</param>
            <returns>List of objects.</returns>
        </member>
        <member name="M:Watson.ORM.Sqlite.WatsonORM.InsertManyAsync``1(System.Collections.Generic.List{``0},System.Threading.CancellationToken)">
            <summary>
            INSERT multiple records.
            This operation will iteratively call Insert on each individual object.
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="objs">List of objects.</param>
            <param name="token">Cancellation token.</param>
            <returns>List of objects.</returns>
        </member>
        <member name="M:Watson.ORM.Sqlite.WatsonORM.InsertMultiple``1(System.Collections.Generic.List{``0})">
            <summary>
            INSERT multiple records.
            This operation performs the INSERT using a single database query, and does not return a list of inserted objects.
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="objs">List of objects.</param>
        </member>
        <member name="M:Watson.ORM.Sqlite.WatsonORM.InsertMultipleAsync``1(System.Collections.Generic.List{``0},System.Threading.CancellationToken)">
            <summary>
            INSERT multiple records.
            This operation performs the INSERT using a single database query, and does not return a list of inserted objects.
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="objs">List of objects.</param>
            <param name="token">Cancellation token.</param>
        </member>
        <member name="M:Watson.ORM.Sqlite.WatsonORM.Update``1(``0)">
            <summary>
            UPDATE an object.
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="obj">Object to UPDATE.</param>
            <returns>UPDATEd object.</returns>
        </member>
        <member name="M:Watson.ORM.Sqlite.WatsonORM.UpdateAsync``1(``0,System.Threading.CancellationToken)">
            <summary>
            UPDATE an object.
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="obj">Object to UPDATE.</param>
            <param name="token">Cancellation token.</param>
            <returns>UPDATEd object.</returns>
        </member>
        <member name="M:Watson.ORM.Sqlite.WatsonORM.UpdateMany``1(ExpressionTree.Expr,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            UPDATE multiple rows.
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="expr">Expression.</param>
            <param name="updateVals">Update values.</param>
        </member>
        <member name="M:Watson.ORM.Sqlite.WatsonORM.UpdateManyAsync``1(ExpressionTree.Expr,System.Collections.Generic.Dictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
            UPDATE multiple rows.
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="expr">Expression.</param>
            <param name="updateVals">Update values.</param>
            <param name="token">Cancellation token.</param>
        </member>
        <member name="M:Watson.ORM.Sqlite.WatsonORM.UpdateMany``1(System.Collections.Generic.List{``0})">
            <summary>
            UPDATE multiple rows.
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="objs">Objects.</param>
        </member>
        <member name="M:Watson.ORM.Sqlite.WatsonORM.UpdateManyAsync``1(System.Collections.Generic.List{``0},System.Threading.CancellationToken)">
            <summary>
            UPDATE multiple rows.
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="objs">Objects.</param>
            <param name="token">Cancellation token.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Watson.ORM.Sqlite.WatsonORM.Delete``1(``0)">
            <summary>
            DELETE an object.
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="obj">Object to DELETE.</param>
        </member>
        <member name="M:Watson.ORM.Sqlite.WatsonORM.DeleteAsync``1(``0,System.Threading.CancellationToken)">
            <summary>
            DELETE an object.
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="obj">Object to DELETE.</param>
            <param name="token">Cancellation token.</param>
        </member>
        <member name="M:Watson.ORM.Sqlite.WatsonORM.DeleteByPrimaryKey``1(System.Object)">
            <summary>
            DELETE an object by its primary key.
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="id">Id value.</param>
        </member>
        <member name="M:Watson.ORM.Sqlite.WatsonORM.DeleteByPrimaryKeyAsync``1(System.Object,System.Threading.CancellationToken)">
            <summary>
            DELETE an object by its primary key.
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="id">Id value.</param>
            <param name="token">Cancellation token.</param>
        </member>
        <member name="M:Watson.ORM.Sqlite.WatsonORM.DeleteMany``1(ExpressionTree.Expr)">
            <summary>
            DELETE objects by an Expression..
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="expr">Expression.</param>
        </member>
        <member name="M:Watson.ORM.Sqlite.WatsonORM.DeleteManyAsync``1(ExpressionTree.Expr,System.Threading.CancellationToken)">
            <summary>
            DELETE objects by an Expression..
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="expr">Expression.</param>
            <param name="token">Cancellation token.</param>
        </member>
        <member name="M:Watson.ORM.Sqlite.WatsonORM.SelectByPrimaryKey``1(System.Object)">
            <summary>
            SELECT an object by id.
            This operation will return null if the object does not exist.
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="id">Id.</param>
            <returns>Object.</returns>
        </member>
        <member name="M:Watson.ORM.Sqlite.WatsonORM.SelectByPrimaryKeyAsync``1(System.Object,System.Threading.CancellationToken)">
            <summary>
            SELECT an object by id.
            This operation will return null if the object does not exist.
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="id">Id.</param>
            <param name="token">Cancellation token.</param>
            <returns>Object.</returns>
        </member>
        <member name="M:Watson.ORM.Sqlite.WatsonORM.SelectFirst``1(ExpressionTree.Expr,DatabaseWrapper.Core.ResultOrder[])">
            <summary>
            SELECT the first instance of an object matching a given expression.
            This operation will return null if the object does not exist.
            </summary>
            <typeparam name="T">Type of filter.</typeparam>
            <param name="expr">Expression by which SELECT should be filtered (i.e. WHERE clause).</param> 
            <param name="ro">Result ordering, if not set, results will be ordered ascending by primary key.</param>
            <returns>Object.</returns>
        </member>
        <member name="M:Watson.ORM.Sqlite.WatsonORM.SelectFirstAsync``1(ExpressionTree.Expr,DatabaseWrapper.Core.ResultOrder[],System.Threading.CancellationToken)">
            <summary>
            SELECT the first instance of an object matching a given expression.
            This operation will return null if the object does not exist.
            </summary>
            <typeparam name="T">Type of filter.</typeparam>
            <param name="expr">Expression by which SELECT should be filtered (i.e. WHERE clause).</param> 
            <param name="ro">Result ordering, if not set, results will be ordered ascending by primary key.</param>
            <param name="token">Cancellation token.</param>
            <returns>Object.</returns>
        </member>
        <member name="M:Watson.ORM.Sqlite.WatsonORM.SelectMany``1(ExpressionTree.Expr,DatabaseWrapper.Core.ResultOrder[])">
            <summary>
            SELECT multiple rows.
            This operation will return an empty list if no matching objects are found.
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="expr">Expression.</param>
            <param name="ro">Result ordering, if not set, results will be ordered ascending by primary key.</param>
            <returns>List of objects.</returns>
        </member>
        <member name="M:Watson.ORM.Sqlite.WatsonORM.SelectManyAsync``1(ExpressionTree.Expr,DatabaseWrapper.Core.ResultOrder[],System.Threading.CancellationToken)">
            <summary>
            SELECT multiple rows.
            This operation will return an empty list if no matching objects are found.
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="expr">Expression.</param>
            <param name="ro">Result ordering, if not set, results will be ordered ascending by primary key.</param>
            <param name="token">Cancellation token.</param>
            <returns>List of objects.</returns>
        </member>
        <member name="M:Watson.ORM.Sqlite.WatsonORM.SelectMany``1(System.Nullable{System.Int32},System.Nullable{System.Int32},ExpressionTree.Expr,DatabaseWrapper.Core.ResultOrder[])">
            <summary>
            SELECT multiple rows with pagination.
            This operation will return an empty list if no matching objects are found.
            </summary> 
            <param name="indexStart">Index start.</param>
            <param name="maxResults">Maximum number of results to retrieve.</param> 
            <param name="expr">Filter to apply when SELECTing rows (i.e. WHERE clause).</param>
            <param name="ro">Result ordering, if not set, results will be ordered ascending by primary key.</param>
            <returns>List of objects.</returns>
        </member>
        <member name="M:Watson.ORM.Sqlite.WatsonORM.SelectManyAsync``1(System.Nullable{System.Int32},System.Nullable{System.Int32},ExpressionTree.Expr,DatabaseWrapper.Core.ResultOrder[],System.Threading.CancellationToken)">
            <summary>
            SELECT multiple rows with pagination.
            This operation will return an empty list if no matching objects are found.
            </summary> 
            <param name="indexStart">Index start.</param>
            <param name="maxResults">Maximum number of results to retrieve.</param> 
            <param name="expr">Filter to apply when SELECTing rows (i.e. WHERE clause).</param>
            <param name="ro">Result ordering, if not set, results will be ordered ascending by primary key.</param>
            <param name="token">Cancellation token.</param>
            <returns>List of objects.</returns>
        </member>
        <member name="M:Watson.ORM.Sqlite.WatsonORM.GetTableName(System.Type)">
            <summary>
            Retrieve the table name for a given type.
            </summary>
            <param name="type">Type.</param>
            <returns>Table name.</returns>
        </member>
        <member name="M:Watson.ORM.Sqlite.WatsonORM.GetColumnName``1(System.String)">
            <summary>
            Retrieve the column name for a given property.
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="propName">Property name.</param>
            <returns>Column name.</returns>
        </member>
        <member name="M:Watson.ORM.Sqlite.WatsonORM.Exists``1(ExpressionTree.Expr)">
            <summary>
            Check if objects of a given type exist that match the supplied expression.
            </summary> 
            <typeparam name="T">Type.</typeparam>
            <param name="expr">Expression.</param>
            <returns>True if exists.</returns>
        </member>
        <member name="M:Watson.ORM.Sqlite.WatsonORM.ExistsAsync``1(ExpressionTree.Expr,System.Threading.CancellationToken)">
            <summary>
            Check if objects of a given type exist that match the supplied expression.
            </summary> 
            <typeparam name="T">Type.</typeparam>
            <param name="expr">Expression.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if exists.</returns>
        </member>
        <member name="M:Watson.ORM.Sqlite.WatsonORM.Count``1(ExpressionTree.Expr)">
            <summary>
            Determine the number of objects of a given type that exist that match the supplied expression.
            </summary> 
            <typeparam name="T">Type.</typeparam>
            <param name="expr">Expression.</param>
            <returns>Number of matching records.</returns>
        </member>
        <member name="M:Watson.ORM.Sqlite.WatsonORM.CountAsync``1(ExpressionTree.Expr,System.Threading.CancellationToken)">
            <summary>
            Determine the number of objects of a given type that exist that match the supplied expression.
            </summary> 
            <typeparam name="T">Type.</typeparam>
            <param name="expr">Expression.</param>
            <param name="token">Cancellation token.</param>
            <returns>Number of matching records.</returns>
        </member>
        <member name="M:Watson.ORM.Sqlite.WatsonORM.Sum``1(System.String,ExpressionTree.Expr)">
            <summary>
            Add the contents of the specified column from objects that match the supplied expression.
            </summary>
            <typeparam name="T">Type.</typeparam>
            <param name="columnName"></param>
            <param name="expr">Expression.</param>
            <returns></returns>
        </member>
        <member name="M:Watson.ORM.Sqlite.WatsonORM.SumAsync``1(System.String,ExpressionTree.Expr,System.Threading.CancellationToken)">
            <summary>
            Add the contents of the specified column from objects that match the supplied expression.
            </summary>
            <typeparam name="T">Type.</typeparam>
            <param name="columnName"></param>
            <param name="expr">Expression.</param>
            <param name="token">Cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:Watson.ORM.Sqlite.WatsonORM.Query(System.String)">
            <summary>
            Execute a query directly against the database.
            </summary>
            <param name="query">Query.</param>
            <returns>DataTable.</returns>
        </member>
        <member name="M:Watson.ORM.Sqlite.WatsonORM.QueryAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Execute a query directly against the database.
            </summary>
            <param name="query">Query.</param>
            <param name="token">Cancellation token.</param>
            <returns>DataTable.</returns>
        </member>
        <member name="M:Watson.ORM.Sqlite.WatsonORM.Timestamp(System.DateTime)">
            <summary>
            Retrieve a timestamp formatted for the database.
            </summary>
            <param name="dt">DateTime.</param>
            <returns>Formatted DateTime string.</returns>
        </member>
        <member name="M:Watson.ORM.Sqlite.WatsonORM.TimestampOffset(System.DateTimeOffset)">
            <summary>
            Retrieve a timestamp with offset formatted for the database.
            </summary>
            <param name="dt">DateTimeOffset.</param>
            <returns>Formatted DateTime string.</returns>
        </member>
        <member name="M:Watson.ORM.Sqlite.WatsonORM.Sanitize(System.String)">
            <summary>
            Returns a sanitized string useful in a raw query.
            If null is supplied, null is returned.
            </summary>
            <param name="str">String.</param>
            <returns>String.</returns>
        </member>
        <member name="M:Watson.ORM.Sqlite.WatsonORM.Dispose(System.Boolean)">
            <summary>
            Dispose of the object and release background workers.
            </summary>
            <param name="disposing">Indicate if child resources should be disposed.</param>
        </member>
    </members>
</doc>
